// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user.proto

package sailing_user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserType int32

const (
	User_default  UserType = 0
	User_official UserType = 1
	User_merchant UserType = 2
)

var UserType_name = map[int32]string{
	0: "default",
	1: "official",
	2: "merchant",
}

var UserType_value = map[string]int32{
	"default":  0,
	"official": 1,
	"merchant": 2,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{0, 0}
}

type User struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                  string               `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile               string               `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Avatar               string               `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Nickname             string               `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Username             string               `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	Password             string               `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Salt                 string               `protobuf:"bytes,9,opt,name=salt,proto3" json:"salt,omitempty"`
	Active               bool                 `protobuf:"varint,10,opt,name=active,proto3" json:"active,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *User) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *User) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Detail               string   `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{1}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type Request struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Request) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Request) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	User                 *User    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterEnum("sailing.user.UserType", UserType_name, UserType_value)
	proto.RegisterType((*User)(nil), "sailing.user.user")
	proto.RegisterType((*Error)(nil), "sailing.user.Error")
	proto.RegisterType((*Request)(nil), "sailing.user.Request")
	proto.RegisterType((*Response)(nil), "sailing.user.Response")
}

func init() { proto.RegisterFile("proto/user.proto", fileDescriptor_d570e3e37e5899c5) }

var fileDescriptor_d570e3e37e5899c5 = []byte{
	// 459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0xdd, 0xa4, 0xc9, 0x36, 0x9d, 0x14, 0x88, 0x0c, 0xac, 0xac, 0x5e, 0xa8, 0x72, 0x40, 0xe5,
	0x92, 0x4a, 0xdd, 0x0b, 0x57, 0x56, 0xe2, 0x00, 0x07, 0x24, 0x2c, 0x38, 0x70, 0x74, 0xe3, 0x69,
	0xb1, 0x48, 0xe2, 0x60, 0x3b, 0xbb, 0xea, 0x47, 0xf2, 0x4f, 0xc8, 0x76, 0x52, 0x28, 0x07, 0xf6,
	0x12, 0xcd, 0x9b, 0x37, 0x2f, 0x99, 0xbc, 0x37, 0x50, 0xf4, 0x5a, 0x59, 0xb5, 0x1d, 0x0c, 0xea,
	0xca, 0x97, 0x64, 0x69, 0xb8, 0x6c, 0x64, 0x77, 0xac, 0x5c, 0x6f, 0xf5, 0xea, 0xa8, 0xd4, 0xb1,
	0xc1, 0xad, 0xe7, 0xf6, 0xc3, 0x61, 0x6b, 0x65, 0x8b, 0xc6, 0xf2, 0xb6, 0x0f, 0xe3, 0xe5, 0xaf,
	0x19, 0x24, 0x6e, 0x92, 0x3c, 0x85, 0x58, 0x0a, 0x1a, 0xad, 0xa3, 0x4d, 0xc2, 0x62, 0x29, 0x48,
	0x01, 0xb3, 0x41, 0x0a, 0x1a, 0xaf, 0xa3, 0xcd, 0x82, 0xb9, 0x92, 0xbc, 0x80, 0x14, 0x5b, 0x2e,
	0x1b, 0x3a, 0xf3, 0xbd, 0x00, 0xc8, 0x0d, 0x5c, 0xb7, 0x6a, 0x2f, 0x1b, 0xa4, 0x89, 0x6f, 0x8f,
	0xc8, 0xf5, 0xf9, 0x3d, 0xb7, 0x5c, 0xd3, 0x34, 0xf4, 0x03, 0x22, 0x2b, 0xc8, 0x3a, 0x59, 0xff,
	0xe8, 0x78, 0x8b, 0xf4, 0xda, 0x33, 0x67, 0xec, 0x38, 0xb7, 0x8b, 0xe7, 0xe6, 0x81, 0x9b, 0xb0,
	0xe3, 0x7a, 0x6e, 0xcc, 0x83, 0xd2, 0x82, 0x66, 0x81, 0x9b, 0x30, 0x21, 0x90, 0x18, 0xde, 0x58,
	0xba, 0xf0, 0x7d, 0x5f, 0xfb, 0xef, 0xd7, 0x56, 0xde, 0x23, 0x85, 0x75, 0xb4, 0xc9, 0xd8, 0x88,
	0xc8, 0x5b, 0x58, 0xd4, 0x1a, 0xb9, 0x45, 0xf1, 0xce, 0xd2, 0x7c, 0x1d, 0x6d, 0xf2, 0xdd, 0xaa,
	0x0a, 0x2e, 0x55, 0x93, 0x4b, 0xd5, 0x97, 0xc9, 0x25, 0xf6, 0x67, 0xd8, 0x29, 0x87, 0x5e, 0x8c,
	0xca, 0xe5, 0xe3, 0xca, 0xf3, 0xb0, 0x53, 0x0a, 0x6c, 0x30, 0x28, 0x9f, 0x3c, 0xae, 0x3c, 0x0f,
	0x97, 0x5b, 0x48, 0xec, 0xa9, 0x47, 0x92, 0xc3, 0x5c, 0xe0, 0x81, 0x0f, 0x8d, 0x2d, 0xae, 0xc8,
	0x12, 0x32, 0x75, 0x38, 0xc8, 0x5a, 0xf2, 0xa6, 0x88, 0x1c, 0x6a, 0x51, 0xd7, 0xdf, 0x79, 0x67,
	0x8b, 0xb8, 0xbc, 0x85, 0xf4, 0xbd, 0xd6, 0x4a, 0x3b, 0x4f, 0x6a, 0x25, 0xd0, 0x27, 0x9a, 0x32,
	0x5f, 0x3b, 0x4f, 0x04, 0x5a, 0x17, 0x61, 0x88, 0x75, 0x44, 0xe5, 0x37, 0x98, 0x33, 0xfc, 0x39,
	0xa0, 0xf1, 0xb6, 0x39, 0xcb, 0x3f, 0x84, 0x53, 0x58, 0xb0, 0x11, 0x5d, 0x44, 0x13, 0xff, 0x27,
	0x9a, 0xd9, 0x65, 0x34, 0xe5, 0x03, 0x64, 0x0c, 0x4d, 0xaf, 0x3a, 0x83, 0x84, 0xc2, 0xdc, 0x0c,
	0x75, 0x8d, 0xc6, 0xf8, 0x97, 0x67, 0x6c, 0x82, 0xe4, 0x0d, 0xa4, 0xe8, 0xb6, 0xf6, 0xaf, 0xce,
	0x77, 0xcf, 0xab, 0xbf, 0x8f, 0xb8, 0xf2, 0x3f, 0xc4, 0xc2, 0x04, 0x79, 0x1d, 0xee, 0xd5, 0x7f,
	0x28, 0xdf, 0x91, 0xcb, 0x49, 0xf7, 0x60, 0x9e, 0xdf, 0x7d, 0x84, 0xe4, 0xab, 0xbb, 0xeb, 0x3b,
	0x78, 0xf6, 0x79, 0x40, 0x7d, 0x72, 0xe0, 0xee, 0xf4, 0xc9, 0xed, 0xfb, 0xf2, 0x52, 0x34, 0xfe,
	0xfa, 0xea, 0xe6, 0xdf, 0x76, 0x58, 0xbb, 0xbc, 0xda, 0x5f, 0xfb, 0x90, 0x6e, 0x7f, 0x07, 0x00,
	0x00, 0xff, 0xff, 0xe5, 0x76, 0x11, 0xd4, 0x6e, 0x03, 0x00, 0x00,
}
